(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>u});var r=t(537),o=t.n(r),i=t(645),a=t.n(i),A=t(667),c=t.n(A),s=new URL(t(453),t.b),l=a()(o()),d=c()(s);l.push([n.id,`:root{\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    --font-size: 16px;\n    --line-height: 1.5em;\n    line-height: var(--line-height);\n    font-size: var(--font-size);\n    --color-primary: teal;\n    --color-primary-darker: rgb(27, 86, 86);\n    --color-secondary: magenta;\n    --color-primary-light: white;\n    --color-secondary-light: white;\n}\nhtml, body, h1, h2, h3, h4, h5, h6, ul, li, form, input, textarea, legend, p{\n    margin: 0;\n    padding: 0;\n}\ninput, textarea{\n    appearance: none;\n    font-size: 1rem;\n    padding: .3em .5em;\n    border-radius: 3px;\n    border: 1px solid var(--color-primary-darker);\n    font-family: inherit;\n}\ntextarea{\n    resize: none;\n}\n/* Utility*/\n.card{\n    display: flex;\n    flex-flow: column nowrap;\n    padding: 1.5em 2em;\n    box-shadow: 3px 5px 6px 0px rgba(0, 0, 0, .15);\n    border-radius: 10px;\n    background-color: var(--primary-font-color-white);\n    max-height: 300px;\n}\n.cutoff{\n    overflow: hidden;\n    display: inline-block;\n    max-height: 60%;\n}\n.btn{\n    padding: .5em .3em;\n    font-size: 1rem;\n    background-color: var(--color-secondary);\n    color: var(--color-secondary-light);\n    border: 1px solid var(--color-secondary);\n    cursor: pointer;\n    max-width: fit-content;\n    border-radius: 3px;\n    transition: 80ms;\n}\n.btn:hover{\n    background-color: var(--color-primary-light);\n    color: var(--color-secondary);\n}\n\n/* Layout */\n.page-container{\n    display: grid;\n    grid-template: auto 1fr auto / [horizontal-start]1fr [horizontal-mid]8fr[horizontal-end];\n    min-height: 100svh;\n}\n.header::before{\n    content: url('#');\n}\n.burger-menu{\n    display: none;\n}\n.header{\n    grid-column: 1 / span 3;\n    background-color: var(--color-primary);\n    color: var(--color-primary-light);\n    font-size: 1.2rem;\n    padding-block: 1.5em;\n    display: flex;\n    justify-content: center;\n}\n.sidebar{\n    background-color: var(--color-primary-darker);\n    color: var(--color-secondary-light);\n    display: flex;\n    justify-content: center;\n    min-height: 100%;\n    min-width: 220px;\n    font-size: 1.2rem;\n}\n.sidebar ul{\n    list-style: none;\n    margin-top: 2em;\n}\n.sidebar li+li{\n    margin-top: .5em;\n}\n.sidebar li:hover:not(li[selected]){\n    cursor: pointer;\n    color: var(--color-secondary);\n    transition: 100ms;\n    font-size: 1.1em;\n}\n.sidebar li[selected]{\n    cursor: pointer;\n    color: var(--color-secondary);\n    border-bottom: 2px solid var(--color-secondary);\n}\n.content{\n    display: grid;\n    grid-column: 2 / horizontal-end;\n    grid-row: 2;\n    gap: .5em;\n    grid-template-columns: repeat(auto-fill, minmax(200px, 20vw));\n    grid-template-rows: 1fr 1fr;\n    grid-auto-rows: 1fr;\n    justify-content: center;\n    padding: 1.5rem;\n}\n.content a{\n    color: cadetblue;\n    cursor: pointer;\n}\n.content a:hover{\n    border-bottom: 1px solid cadetblue;\n}\n.content > p:only-of-type{\n    grid-area: 1/1 / 4/4;\n    opacity: .8;\n    display: flex;\n    display: inline-block;\n    margin: auto;\n}\n.card textarea, .card input{\n    color: rgba(0, 0, 0, .6);\n    border: 0;\n    margin: 0;\n    padding: 0;\n    font-size: 1rem;\n}\n.card .title:hover{\n    user-select: none;\n    opacity: .6;\n    text-decoration: line-through;\n    cursor: pointer;\n}\n.card[checked="true"]{\n    opacity: .5;\n}\n.card[checked="true"] .title, .card[checked="true"] p{\n    text-decoration: line-through;\n}\n.card[checked="true"] .title:hover{\n    text-decoration: none;\n    cursor: pointer;\n}\n.card textarea{\n    overflow: hidden;\n    padding: 0;\n    border: 0;\n    line-height: var(--line-height);\n}\n.card * ~*{\n    padding-top: .3em;\n}\nfooter{\n    background-color: var(--color-primary);\n    color: var(--color-primary-light);\n    grid-column: 1 / span 3;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding-block: 2em;\n}\n.form-container{\n    position: fixed;\n    top: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(0, 0, 0, .4);\n    height: 100%;\n    width: 100%;\n}\n.form-container form{\n    background-color: var(--color-primary);\n    color: var(--color-primary-light);\n    border-radius: 5px;\n    padding: 1.5em 1em;\n    display: flex;\n    flex-direction: column;\n    gap: .5em;\n}\nform .inputs{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    gap: .5em;\n    margin-inline: auto;\n    max-width: 90%;\n}\n.form-container form > div:first-child{\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: .5em;\n    font-family: 'Courier New', Courier, monospace;\n    font-size: 1.3em;\n}\nform legend{\n    padding-left:.2em ;\n}\nform input, form textarea{\n    max-width: 100%;\n}\n.form-container button:last-child{\n    width: 25%;\n    margin-left: auto;\n}\n\n@media screen and (max-width: 610px) {\n    .header{\n        position: relative;\n        font-size: 1rem;\n    }\n    .burger-menu{\n        background-image: url(${d});\n        background-size: contain;\n        background-repeat: no-repeat;\n        min-width: 50%;\n        min-height: 50%;\n        display: inline-block;\n        position: absolute;\n        left: 1em;\n        top: 25%;\n        z-index: 10;\n    }\n    .sidebar{\n        display: none;\n    }\n    .content{\n        grid-column: horizontal-start / horizontal-end;\n        justify-content: center;\n        align-content: center;\n    }\n    .sidebar[open]{\n        display: block;\n        position: fixed;\n        top: 0;\n        text-align: center;\n        width: 100%;\n        min-height: fit-content;\n        z-index: 4;\n    }\n    .sidebar li{\n        padding-block: 1em;\n        border-bottom: 1px solid rgba(0, 0, 0, .15);\n    }\n    .form-container{\n        max-width: 100vw;\n    }\n    .form-container form{\n        max-width: 80vw;\n    }\n    .form-container button:last-child{\n        width: 50%;\n    }\n}`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,4DAA4D;IAC5D,iBAAiB;IACjB,oBAAoB;IACpB,+BAA+B;IAC/B,2BAA2B;IAC3B,qBAAqB;IACrB,uCAAuC;IACvC,0BAA0B;IAC1B,4BAA4B;IAC5B,8BAA8B;AAClC;AACA;IACI,SAAS;IACT,UAAU;AACd;AACA;IACI,gBAAgB;IAChB,eAAe;IACf,kBAAkB;IAClB,kBAAkB;IAClB,6CAA6C;IAC7C,oBAAoB;AACxB;AACA;IACI,YAAY;AAChB;AACA,WAAW;AACX;IACI,aAAa;IACb,wBAAwB;IACxB,kBAAkB;IAClB,8CAA8C;IAC9C,mBAAmB;IACnB,iDAAiD;IACjD,iBAAiB;AACrB;AACA;IACI,gBAAgB;IAChB,qBAAqB;IACrB,eAAe;AACnB;AACA;IACI,kBAAkB;IAClB,eAAe;IACf,wCAAwC;IACxC,mCAAmC;IACnC,wCAAwC;IACxC,eAAe;IACf,sBAAsB;IACtB,kBAAkB;IAClB,gBAAgB;AACpB;AACA;IACI,4CAA4C;IAC5C,6BAA6B;AACjC;;AAEA,WAAW;AACX;IACI,aAAa;IACb,wFAAwF;IACxF,kBAAkB;AACtB;AACA;IACI,iBAAiB;AACrB;AACA;IACI,aAAa;AACjB;AACA;IACI,uBAAuB;IACvB,sCAAsC;IACtC,iCAAiC;IACjC,iBAAiB;IACjB,oBAAoB;IACpB,aAAa;IACb,uBAAuB;AAC3B;AACA;IACI,6CAA6C;IAC7C,mCAAmC;IACnC,aAAa;IACb,uBAAuB;IACvB,gBAAgB;IAChB,gBAAgB;IAChB,iBAAiB;AACrB;AACA;IACI,gBAAgB;IAChB,eAAe;AACnB;AACA;IACI,gBAAgB;AACpB;AACA;IACI,eAAe;IACf,6BAA6B;IAC7B,iBAAiB;IACjB,gBAAgB;AACpB;AACA;IACI,eAAe;IACf,6BAA6B;IAC7B,+CAA+C;AACnD;AACA;IACI,aAAa;IACb,+BAA+B;IAC/B,WAAW;IACX,SAAS;IACT,6DAA6D;IAC7D,2BAA2B;IAC3B,mBAAmB;IACnB,uBAAuB;IACvB,eAAe;AACnB;AACA;IACI,gBAAgB;IAChB,eAAe;AACnB;AACA;IACI,kCAAkC;AACtC;AACA;IACI,oBAAoB;IACpB,WAAW;IACX,aAAa;IACb,qBAAqB;IACrB,YAAY;AAChB;AACA;IACI,wBAAwB;IACxB,SAAS;IACT,SAAS;IACT,UAAU;IACV,eAAe;AACnB;AACA;IACI,iBAAiB;IACjB,WAAW;IACX,6BAA6B;IAC7B,eAAe;AACnB;AACA;IACI,WAAW;AACf;AACA;IACI,6BAA6B;AACjC;AACA;IACI,qBAAqB;IACrB,eAAe;AACnB;AACA;IACI,gBAAgB;IAChB,UAAU;IACV,SAAS;IACT,+BAA+B;AACnC;AACA;IACI,iBAAiB;AACrB;AACA;IACI,sCAAsC;IACtC,iCAAiC;IACjC,uBAAuB;IACvB,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,kBAAkB;AACtB;AACA;IACI,eAAe;IACf,MAAM;IACN,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,mCAAmC;IACnC,YAAY;IACZ,WAAW;AACf;AACA;IACI,sCAAsC;IACtC,iCAAiC;IACjC,kBAAkB;IAClB,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,SAAS;IACT,mBAAmB;IACnB,cAAc;AAClB;AACA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,8CAA8C;IAC9C,gBAAgB;AACpB;AACA;IACI,kBAAkB;AACtB;AACA;IACI,eAAe;AACnB;AACA;IACI,UAAU;IACV,iBAAiB;AACrB;;AAEA;IACI;QACI,kBAAkB;QAClB,eAAe;IACnB;IACA;QACI,yDAAuD;QACvD,wBAAwB;QACxB,4BAA4B;QAC5B,cAAc;QACd,eAAe;QACf,qBAAqB;QACrB,kBAAkB;QAClB,SAAS;QACT,QAAQ;QACR,WAAW;IACf;IACA;QACI,aAAa;IACjB;IACA;QACI,8CAA8C;QAC9C,uBAAuB;QACvB,qBAAqB;IACzB;IACA;QACI,cAAc;QACd,eAAe;QACf,MAAM;QACN,kBAAkB;QAClB,WAAW;QACX,uBAAuB;QACvB,UAAU;IACd;IACA;QACI,kBAAkB;QAClB,2CAA2C;IAC/C;IACA;QACI,gBAAgB;IACpB;IACA;QACI,eAAe;IACnB;IACA;QACI,UAAU;IACd;AACJ",sourcesContent:[":root{\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    --font-size: 16px;\n    --line-height: 1.5em;\n    line-height: var(--line-height);\n    font-size: var(--font-size);\n    --color-primary: teal;\n    --color-primary-darker: rgb(27, 86, 86);\n    --color-secondary: magenta;\n    --color-primary-light: white;\n    --color-secondary-light: white;\n}\nhtml, body, h1, h2, h3, h4, h5, h6, ul, li, form, input, textarea, legend, p{\n    margin: 0;\n    padding: 0;\n}\ninput, textarea{\n    appearance: none;\n    font-size: 1rem;\n    padding: .3em .5em;\n    border-radius: 3px;\n    border: 1px solid var(--color-primary-darker);\n    font-family: inherit;\n}\ntextarea{\n    resize: none;\n}\n/* Utility*/\n.card{\n    display: flex;\n    flex-flow: column nowrap;\n    padding: 1.5em 2em;\n    box-shadow: 3px 5px 6px 0px rgba(0, 0, 0, .15);\n    border-radius: 10px;\n    background-color: var(--primary-font-color-white);\n    max-height: 300px;\n}\n.cutoff{\n    overflow: hidden;\n    display: inline-block;\n    max-height: 60%;\n}\n.btn{\n    padding: .5em .3em;\n    font-size: 1rem;\n    background-color: var(--color-secondary);\n    color: var(--color-secondary-light);\n    border: 1px solid var(--color-secondary);\n    cursor: pointer;\n    max-width: fit-content;\n    border-radius: 3px;\n    transition: 80ms;\n}\n.btn:hover{\n    background-color: var(--color-primary-light);\n    color: var(--color-secondary);\n}\n\n/* Layout */\n.page-container{\n    display: grid;\n    grid-template: auto 1fr auto / [horizontal-start]1fr [horizontal-mid]8fr[horizontal-end];\n    min-height: 100svh;\n}\n.header::before{\n    content: url('#');\n}\n.burger-menu{\n    display: none;\n}\n.header{\n    grid-column: 1 / span 3;\n    background-color: var(--color-primary);\n    color: var(--color-primary-light);\n    font-size: 1.2rem;\n    padding-block: 1.5em;\n    display: flex;\n    justify-content: center;\n}\n.sidebar{\n    background-color: var(--color-primary-darker);\n    color: var(--color-secondary-light);\n    display: flex;\n    justify-content: center;\n    min-height: 100%;\n    min-width: 220px;\n    font-size: 1.2rem;\n}\n.sidebar ul{\n    list-style: none;\n    margin-top: 2em;\n}\n.sidebar li+li{\n    margin-top: .5em;\n}\n.sidebar li:hover:not(li[selected]){\n    cursor: pointer;\n    color: var(--color-secondary);\n    transition: 100ms;\n    font-size: 1.1em;\n}\n.sidebar li[selected]{\n    cursor: pointer;\n    color: var(--color-secondary);\n    border-bottom: 2px solid var(--color-secondary);\n}\n.content{\n    display: grid;\n    grid-column: 2 / horizontal-end;\n    grid-row: 2;\n    gap: .5em;\n    grid-template-columns: repeat(auto-fill, minmax(200px, 20vw));\n    grid-template-rows: 1fr 1fr;\n    grid-auto-rows: 1fr;\n    justify-content: center;\n    padding: 1.5rem;\n}\n.content a{\n    color: cadetblue;\n    cursor: pointer;\n}\n.content a:hover{\n    border-bottom: 1px solid cadetblue;\n}\n.content > p:only-of-type{\n    grid-area: 1/1 / 4/4;\n    opacity: .8;\n    display: flex;\n    display: inline-block;\n    margin: auto;\n}\n.card textarea, .card input{\n    color: rgba(0, 0, 0, .6);\n    border: 0;\n    margin: 0;\n    padding: 0;\n    font-size: 1rem;\n}\n.card .title:hover{\n    user-select: none;\n    opacity: .6;\n    text-decoration: line-through;\n    cursor: pointer;\n}\n.card[checked=\"true\"]{\n    opacity: .5;\n}\n.card[checked=\"true\"] .title, .card[checked=\"true\"] p{\n    text-decoration: line-through;\n}\n.card[checked=\"true\"] .title:hover{\n    text-decoration: none;\n    cursor: pointer;\n}\n.card textarea{\n    overflow: hidden;\n    padding: 0;\n    border: 0;\n    line-height: var(--line-height);\n}\n.card * ~*{\n    padding-top: .3em;\n}\nfooter{\n    background-color: var(--color-primary);\n    color: var(--color-primary-light);\n    grid-column: 1 / span 3;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding-block: 2em;\n}\n.form-container{\n    position: fixed;\n    top: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(0, 0, 0, .4);\n    height: 100%;\n    width: 100%;\n}\n.form-container form{\n    background-color: var(--color-primary);\n    color: var(--color-primary-light);\n    border-radius: 5px;\n    padding: 1.5em 1em;\n    display: flex;\n    flex-direction: column;\n    gap: .5em;\n}\nform .inputs{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    gap: .5em;\n    margin-inline: auto;\n    max-width: 90%;\n}\n.form-container form > div:first-child{\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: .5em;\n    font-family: 'Courier New', Courier, monospace;\n    font-size: 1.3em;\n}\nform legend{\n    padding-left:.2em ;\n}\nform input, form textarea{\n    max-width: 100%;\n}\n.form-container button:last-child{\n    width: 25%;\n    margin-left: auto;\n}\n\n@media screen and (max-width: 610px) {\n    .header{\n        position: relative;\n        font-size: 1rem;\n    }\n    .burger-menu{\n        background-image: url('./assets/icons/burger-menu.svg');\n        background-size: contain;\n        background-repeat: no-repeat;\n        min-width: 50%;\n        min-height: 50%;\n        display: inline-block;\n        position: absolute;\n        left: 1em;\n        top: 25%;\n        z-index: 10;\n    }\n    .sidebar{\n        display: none;\n    }\n    .content{\n        grid-column: horizontal-start / horizontal-end;\n        justify-content: center;\n        align-content: center;\n    }\n    .sidebar[open]{\n        display: block;\n        position: fixed;\n        top: 0;\n        text-align: center;\n        width: 100%;\n        min-height: fit-content;\n        z-index: 4;\n    }\n    .sidebar li{\n        padding-block: 1em;\n        border-bottom: 1px solid rgba(0, 0, 0, .15);\n    }\n    .form-container{\n        max-width: 100vw;\n    }\n    .form-container form{\n        max-width: 80vw;\n    }\n    .form-container button:last-child{\n        width: 50%;\n    }\n}"],sourceRoot:""}]);const u=l},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(a[c]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);r&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],A=0;A<n.length;A++){var c=n[A],s=r.base?c[0]+r.base:c[0],l=i[s]||0,d="".concat(s," ").concat(l);i[s]=l+1;var u=t(d),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var m=o(p,r);r.byIndex=A,e.splice(A,0,{identifier:d,updater:m,references:1})}a.push(d)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var A=t(i[a]);e[A].references--}for(var c=r(n,o),s=0;s<i.length;s++){var l=t(i[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},453:(n,e,t)=>{n.exports=t.p+"ebd2e4e17486e5540b91.svg"}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&!n;)n=r[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),i=t(569),a=t.n(i),A=t(565),c=t.n(A),s=t(216),l=t.n(s),d=t(589),u=t.n(d),p=t(426),m={};m.styleTagTransform=u(),m.setAttributes=c(),m.insert=a().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=l(),e()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;const C=class{constructor(){localStorage.getItem("taskArr")||(localStorage.setItem("taskArr","[]"),localStorage.setItem("taskID","0"))}getTaskArray=()=>{let n=JSON.parse(localStorage.getItem("taskArr"));return n=n.map((n=>new f(n.title,n.dueDate,n.description,n.isDone,n.id))),n};getTaskID=()=>Number.parseInt(localStorage.getItem("taskID"));addTask=n=>{const e=this.getTaskArray();e.push(n),localStorage.setItem("taskArr",JSON.stringify(e)),localStorage.setItem("taskID",n.id+1)};getTask(n){return this.getTaskArray().filter((e=>e.id===n))}updateTask(n,e){const t=this.getTaskArray(),r=t.findIndex((e=>e.id===n));t.splice(r,1,e),localStorage.setItem("taskArr",JSON.stringify(t))}};class f{constructor(n,e=null,t=null,r=!1,o=(new C).getTaskID()){if(!n||"string"!=typeof n)throw new Error("Invalid title");this.id=o,this.title=n,this.dueDate=e,this.description=t,this.isDone=r}toggleDone(){return this.isDone?this.isDone=!1:this.isDone=!0,this.isDone}modify(n){if(isTypeCorrect(n,"object"))for(key in n){if(!this[key])return void console.error(`${key} is an illegal key`);this[key]=n[key]}}}const g=function(){const n=(new C).getTaskArray().filter((n=>n.isDone)),e=document.createElement("div");if(e.classList="content",0==n.length)e.innerHTML="<p>You haven't completed any tasks yet.</br>Go ahead and <a>Get some work done</a></p>",e.querySelector("a").addEventListener("click",(()=>{document.querySelector('.sidebar li[name="Active Task"]').click()}));else{const t=new MutationObserver((n=>{(new B).renderPage(g)}));for(let r of n){const n=new I(r);e.appendChild(n),t.observe(n,{attributes:!0})}}return e},h=g,B=class{pageContainer=document.querySelector(".page-container");renderTaskForm=()=>{this.pageContainer.appendChild(b())};dynamicElemRemoval(n,e,t){const r=()=>{t.removeChild(e)};e.addEventListener("click",r),n.onmouseover=n.onmouseout=n=>{"mouseout"===n.type&&e.addEventListener("click",r),"mouseover"===n.type&&e.removeEventListener("click",r)}}renderPage(n){const e=document.querySelector(".content");e&&this.pageContainer.removeChild(e),this.pageContainer.appendChild(n())}refreshPage(){switch(document.querySelector(".sidebar li[selected]").getAttribute("name")){case"Active Task":this.renderPage(v);break;case"Complete Task":this.renderPage(h)}}};function I(n){const e=document.createElement("div");e.classList="card",e.setAttribute("checked",n.isDone);const t=new C;e.innerHTML=`\n    <h2 class="title">${n.title}</h2>\n    <p class="due-date">${n.dueDate||'<button class="btn">Add Due Date</button>'}</p>\n    <p class="description cutoff">${n.description||'<button class="btn">Add Description</button>'}</p>\n    `;const r=e.querySelector(".due-date"),o=e.querySelector(".description");let i=e.querySelector(".description > .btn"),a=e.querySelector(".due-date > .btn");function A(){const o=document.createElement("input");o.setAttribute("type","date");const i=function(e){("keydown"===e.type&&"Enter"===e.key||"focusout"===e.type&&document.querySelector('input[type="date"]'))&&("keydown"===e.type&&o.removeEventListener("focusout",i),n.dueDate=this.value,t.updateTask(n.id,n),(new B).refreshPage())};o.addEventListener("change",i),o.addEventListener("keydown",i),o.addEventListener("focusout",i),a?(r.insertBefore(o,a),r.removeChild(a)):(o.value=r.innerText,e.insertBefore(o,r),e.removeChild(r)),o.focus()}function c(){const r=document.createElement("textarea"),a=function(e){"Enter"!==e.key||e.shiftKey||(r.removeEventListener("focusout",a),n.description=this.value,t.updateTask(n.id,n),(new B).refreshPage()),"focusout"===e.type&&(n.description=this.value,t.updateTask(n.id,n),(new B).refreshPage())};r.addEventListener("keydown",a),r.addEventListener("focusout",a),i=e.querySelector(".description > .btn"),i?(o.insertBefore(r,i),o.removeChild(i)):(r.innerText=this.innerText,e.insertBefore(r,o),e.removeChild(o)),r.focus()}return e.querySelector(".title").addEventListener("click",(()=>{const r=n.toggleDone();t.updateTask(n.id,n),e.setAttribute("checked",r)})),n.description?o.addEventListener("click",c,{once:!0}):i.addEventListener("click",c),n.dueDate?r.addEventListener("click",A,{once:!0}):a.addEventListener("click",A),e}const y=function(){const n=(new C).getTaskArray().filter((n=>!n.isDone)),e=document.createElement("div");if(e.classList="content",0==n.length)e.innerHTML="<p>You haven't completed any tasks yet.</br>Go ahead and <a>Get some work done</a></p>",e.querySelector("a").addEventListener("click",(()=>{document.querySelector('.sidebar li[name="Active Task"]').click()}));else{const t=new MutationObserver((n=>{(new B).renderPage(y)}));for(let r of n){const n=new I(r);e.appendChild(n),t.observe(n,{attributes:!0})}}return e},v=y;function b(){const n=new C,e=new B,t=document.querySelector(".page-container"),r=document.createElement("div");r.classList="form-container";const o=document.createElement("form");o.innerHTML='\n        <div><legend>Add A New Task</legend><img src="#" alt="X" class="close" style="cursor: pointer;"></div>\n        <div class="inputs">\n            <input type="text" id="title" placeholder="Title*" required>\n            <input type="date" id="due-date">\n            <textarea id="description" placeholder="Description" cols="45" rows="2"></textarea>\n            <button id="submit" class="btn">Add task</button>\n        </div>\n    ',r.appendChild(o);const i=o.querySelector(".close"),a=o.querySelector("button#submit");return i.onclick=a.onclick=function(A){if(A.target===i&&t.removeChild(r),A.target===a){const t=o.querySelector("input#title"),r=o.querySelector("input#due-date"),i=o.querySelector("textarea#description"),a=new f(t.value,r.value,i.value);n.addTask(a),e.renderPage(v)}},r}function k(){const n=(new C).getTaskArray(),e=document.createElement("div");if(e.classList="content",n&&0!==n.length)for(let t of n)e.appendChild(I(t));else e.innerHTML="<p>There are no tasks created yet</p>";return e}t(453);const x=new B,w=function(){for(let n of document.querySelectorAll(".sidebar li"))n.removeAttribute("selected");this.setAttribute("selected","")};document.querySelector('li[name="New Task"]').addEventListener("click",(function(){const n=b(),e=document.querySelector(".page-container");e.appendChild(n),x.dynamicElemRemoval(n.firstChild,n,e)})),document.querySelector('li[name="All Tasks"]').addEventListener("click",(function(){x.renderPage(k),w.call(this)})),document.querySelector('li[name="Active Task"]').addEventListener("click",(function(){x.renderPage(v),w.call(this)})),document.querySelector('li[name="Complete Task"]').addEventListener("click",(function(){x.renderPage(h),w.call(this)})),function(){const n=document.querySelector(".burger-menu"),e=document.querySelector(".sidebar"),t=document.querySelectorAll(".sidebar li"),r=function(){e.toggleAttribute("open")};n.addEventListener("click",r),t.forEach((n=>{n.addEventListener("click",r)}))}(),document.querySelector('li[name="All Tasks"]').click()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,